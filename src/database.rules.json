
{
  "rules": {
    "rules_version": "2",
    "service": "cloud.firestore",
    "match": "/databases/{database}/documents",
    "function isSignedIn()": "return request.auth != null;",
    "function isUser(userId)": "return isSignedIn() && request.auth.uid == userId;",
    
    "match": "/users/{userId}",
    "allow": "read: if isSignedIn(); write: if isUser(userId);",
    
    "match": "/users/{userId}/friends/{friendId}",
    "allow": "read, list: if isUser(userId); create, delete: if isSignedIn();",

    "match": "/friendRequests/{requestId}",
    "allow": "read, list: if isSignedIn() && (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to); create: if isSignedIn() && request.auth.uid == request.resource.data.from; delete: if isSignedIn() && (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);",
    
    "match": "/rooms/{roomId}",
    "allow": "read, write: if isSignedIn() && resource.data.participants[request.auth.uid] == true;",
    
    "match": "/rooms/{roomId}/messages/{messageId}",
    "allow": "read, create: if isSignedIn() && get(/databases/$(database)/documents/rooms/$(roomId)).data.participants[request.auth.uid] == true; update, delete: if false;"
  }
}
