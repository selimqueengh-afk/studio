
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    // USERS
    // Users can read anyone's profile.
    // Users can only create and update their own profile.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create, update: if isSignedIn() && request.auth.uid == userId;
    }

    // FRIENDS
    // Users can read their own friends list.
    // Writing to a friends list is only allowed as part of accepting a friend request.
    match /users/{userId}/friends/{friendId} {
        allow read: if isSignedIn() && request.auth.uid == userId;
        // Allow write only if the user is accepting a valid friend request from the other user.
        // This is the key rule that allows acceptFriendRequest to work.
        allow write: if isSignedIn() && (
                      (request.auth.uid == userId && exists(/databases/$(database)/documents/friendRequests/$(friendId)_$(userId))) ||
                      (request.auth.uid == friendId && exists(/databases/$(database)/documents/friendRequests/$(userId)_$(friendId)))
                    );
        allow delete: if isSignedIn() && (request.auth.uid == userId || request.auth.uid == friendId);
    }
    
    // FRIEND REQUESTS
    // A user can create a request.
    // A user can read a request if they are the sender or receiver.
    // A user can delete a request only if they are the receiver (accept/reject).
    match /friendRequests/{requestId} {
      allow read: if isSignedIn() && (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.from;
      allow delete: if isSignedIn() && request.auth.uid == resource.data.to;
    }

    // ROOMS (CHATS)
    // Users can read a room if they are a participant.
    // Users can create a room.
    match /rooms/{roomId} {
      allow read: if isSignedIn() && request.auth.uid in resource.data.participants;
      allow create: if isSignedIn();
      // No updates or deletes for simplicity.
    }

    // MESSAGES
    // Users can read messages in a room they are a participant of.
    // Users can write messages to a room they are a participant of.
    match /rooms/{roomId}/messages/{messageId} {
       allow read: if isSignedIn() && get(/databases/$(database)/documents/rooms/$(roomId)).data.participants.hasAny([request.auth.uid]);
       allow create: if isSignedIn() && get(/databases/$(database)/documents/rooms/$(roomId)).data.participants.hasAny([request.auth.uid]);
    }
  }
}
