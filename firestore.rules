
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read their own profile, and other users can read public profiles
    match /users/{userId} {
      allow read;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
    }

    // Users can read their own friends list
    match /users/{userId}/friends/{friendId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        // Allow creating/deleting a friend entry IF:
        // 1. You are the user whose list is being modified.
        // OR 2. A valid friend request exists that you are accepting.
        allow write: if request.auth != null && (
            (request.auth.uid == userId) || // The user is modifying their own friend list (e.g., removing a friend)
            (exists(/databases/$(database)/documents/friendRequests/$(friendId)_$(userId)) && // The inverse request exists
             get(/databases/$(database)/documents/friendRequests/$(friendId)_$(userId)).data.to == userId) // And it's directed to the current user
        );
    }
    
    // Friend Requests
    match /friendRequests/{requestId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.from ||
        request.auth.uid == resource.data.to
      );
      // Allow creating a request if you are the sender
      allow create: if request.auth != null && request.auth.uid == request.resource.data.from;
      // Allow deleting a request if you are the sender (canceling) or receiver (rejecting)
      allow delete: if request.auth != null && (
        request.auth.uid == resource.data.from ||
        request.auth.uid == resource.data.to
      );
    }

    // Chat Rooms
    match /rooms/{roomId} {
        // Allow read/write if the user is a participant in the room
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;
    }

    // Messages within a chat room
    match /rooms/{roomId}/messages/{messageId} {
      allow read: if get(/databases/$(database)/documents/rooms/$(roomId)).data.participants.hasAny([request.auth.uid]);
      // Allow creating a message if the user is a participant of the room
      // and the message is being sent by them.
      allow create: if get(/databases/$(database)/documents/rooms/$(roomId)).data.participants.hasAny([request.auth.uid])
                    && request.resource.data.userId == request.auth.uid;
      allow update, delete: if resource.data.userId == request.auth.uid;
    }
  }
}
