
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read the public profile of any user.
    // Users can only write to their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;

      // A user can only read and write their own friends list.
      match /friends/{friendId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Friend requests can be created by the sender.
    // They can be read by sender or receiver.
    // They can be deleted by the receiver (as part of accepting/rejecting).
    match /friendRequests/{requestId} {
      allow read: if request.auth != null && (resource.data.from == request.auth.uid || resource.data.to == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.from == request.auth.uid;
      allow delete: if request.auth != null && resource.data.to == request.auth.uid;
    }

    // Chat rooms
    match /rooms/{roomId} {
      // Allow read if the user is a participant of a direct message
      allow read: if request.auth != null && resource.data.participants[request.auth.uid] == true;
      allow create: if request.auth != null;

      // Messages
      match /messages/{messageId} {
        // Allow read if user can read the room.
        // Allow write if user is a participant.
        allow read: if get( /databases/$(database)/documents/rooms/$(roomId)).data.participants[request.auth.uid] == true;
        allow create: if get( /databases/$(database)/documents/rooms/$(roomId)).data.participants[request.auth.uid] == true;
      }
    }
  }
}
