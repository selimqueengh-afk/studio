
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read/write their own user document.
    // They can only read other users' documents.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      allow get: if request.auth != null;
    }

    // Users can read/write to their own friends subcollection
    match /users/{userId}/friends/{friendId} {
      allow read, delete: if request.auth != null && request.auth.uid == userId;
      // Allow user to be added to another user's friend list ONLY if a corresponding friend request exists
      allow create: if (request.auth != null && request.auth.uid == userId) || 
                      (request.auth != null && exists(/databases/$(database)/documents/friendRequests/$(friendId)_$(userId)));
    }
    
    // Friend Requests
    match /friendRequests/{requestId} {
      // A user can create a request if they are the sender
      allow create: if request.auth != null && request.resource.data.from == request.auth.uid;
      
      // A user can read a request if they are the sender or receiver
      allow get: if request.auth != null && (request.resource.data.from == request.auth.uid || request.resource.data.to == request.auth.uid);
      
      // A user can delete a request if they are the sender (cancel) or receiver (reject/accept)
      allow delete: if request.auth != null && (get(/databases/$(database)/documents/friendRequests/$(requestId)).data.from == request.auth.uid || get(/databases/$(database)/documents/friendRequests/$(requestId)).data.to == request.auth.uid);
    }

    // Chat Rooms and Messages
    match /rooms/{roomId} {
      // Allow read/create if the user is a participant in a DM room
      allow get, create: if request.auth != null && resource.data.isDirectMessage == true && request.auth.uid in resource.data.participants;
      // Allow read for public rooms
      allow get: if request.auth != null && resource.data.isDirectMessage != true;
    }

    match /rooms/{roomId}/messages/{messageId} {
      allow read, create: if request.auth != null && get(/databases/$(database)/documents/rooms/$(roomId)).data.participants.hasAny([request.auth.uid]);
    }
  }
}
