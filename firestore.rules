
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Users can read anyone's profile, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // A user can only read their own friends list.
    // A friend can be added only if there was a pending friend request.
    match /users/{userId}/friends/{friendId} {
        allow read: if request.auth.uid == userId;

        // Allow creating a friend document if a request exists and is being accepted by the recipient.
        allow create: if 
          request.auth.uid == userId &&
          exists(/databases/$(database)/documents/friendRequests/$(friendId)_$(userId)) &&
          get(/databases/$(database)/documents/friendRequests/$(friendId)_$(userId)).data.to == userId;

        // Allow being added as a friend if a request exists and is being accepted by you.
        allow create: if 
          request.auth.uid == friendId &&
          exists(/databases/$(database)/documents/friendRequests/$(userId)_$(friendId)) &&
          get(/databases/$(database)/documents/friendRequests/$(userId)_$(friendId)).data.to == friendId;
          
        // Allow deleting (removing) a friend
        allow delete: if request.auth.uid == userId || request.auth.uid == friendId;
    }

    // Friend requests can be created by anyone.
    // They can be read by the sender or receiver.
    // They can only be deleted by the receiver (accept/reject).
    match /friendRequests/{requestId} {
      allow create: if request.auth.uid == request.resource.data.from;
      allow read: if request.auth.uid == resource.data.from || request.auth.uid == resource.data.to;
      allow delete: if request.auth.uid == resource.data.to;
    }
    
    // Anyone authenticated can read room info.
    // Only the creator can delete a room.
    match /rooms/{roomId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid != null;
        allow update: if request.auth.uid != null;
    }
    
    // Anyone in a room (participant) can read messages.
    // Only the sender can create a message.
    match /rooms/{roomId}/messages/{messageId} {
        allow read: if get(/databases/$(database)/documents/rooms/$(roomId)).data.participants.hasAny([request.auth.uid]);
        allow create: if request.auth.uid == request.resource.data.userId;
    }
  }
}
