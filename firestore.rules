{
  "rules": {
    "users": {
      // Allow all authenticated users to list and read user profiles
      ".read": "auth != null",
      "$uid": {
        // Allow a user to write only to their own document
        ".write": "auth != null && auth.uid === $uid",
        "friends": {
          // Allow reading own friends list
          ".read": "auth != null && auth.uid === $uid",
           // Allow writing to a friends list (adding a friend)
          "$friendId": {
             ".write": "auth != null && (auth.uid === $uid || auth.uid === $friendId)"
          }
        }
      }
    },
    "friendRequests": {
      "$requestId": {
        // Allow reading if the user is the sender or receiver
        ".read": "auth != null && (data.child('from').val() === auth.uid || data.child('to').val() === auth.uid)",
        // Allow writing only if creating a new request and the user is the sender
        ".write": "auth != null && newData.child('from').val() === auth.uid && !data.exists()",
        ".validate": "newData.hasChildren(['from', 'to', 'createdAt'])"
      }
    },
    "rooms": {
      "$roomId": {
        // Allow read/write if the user is a participant
        ".read": "auth != null && resource.data.participants[auth.uid] == true",
        ".write": "auth != null && resource.data.participants[auth.uid] == true",
        "messages": {
           // Allow read/write if the user is a participant of the parent room
          ".read": "get(/databases/$(database)/documents/rooms/$(roomId)).data.participants[request.auth.uid] == true",
          ".write": "get(/databases/$(database)/documents/rooms/$(roomId)).data.participants[request.auth.uid] == true"
        }
      }
    }
  }
}