
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Users collection
    // Allow any signed-in user to read/list all users for finding friends.
    // Allow a user to update only their own document.
    match /users/{userId} {
      allow read, list: if isSignedIn();
      allow update: if isUser(userId);
      
      // Friends subcollection
      // Allow a user to read/list only their own friends.
      match /friends/{friendId} {
        allow read, list: if isUser(userId);
        allow create, delete: if isUser(userId);
      }
    }
    
    // Friend Requests collection
    // Allow read to check for existing requests.
    // Allow create only if the request is from the signed-in user.
    match /friendRequests/{requestId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.from.uid == request.auth.uid;
      allow delete: if isSignedIn();
    }
    
    // Rooms collection
    // Allow read/write if the user is a participant in the room.
    match /rooms/{roomId} {
      allow read, write: if isSignedIn() && resource.data.participants[request.auth.uid] == true;

      // Messages subcollection
      // Allow read/create if the user is a participant in the room.
      match /messages/{messageId} {
        allow read, create: if isSignedIn() && get(/databases/$(database)/documents/rooms/$(roomId)).data.participants[request.auth.uid] == true;
        allow update, delete: if false; // Messages cannot be edited or deleted
      }
    }
  }
}
