rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for an existing friend request
    function friendRequestExists(fromId, toId) {
      return exists(/databases/$(database)/documents/friendRequests/$(fromId)_$(toId));
    }

    match /users/{userId} {
      // Anyone can create their own user document
      allow create: if request.auth.uid == userId;
      // Anyone can read any user's profile data
      allow read: if request.auth.uid != null;
      // Users can only update their own profile data
      allow update: if request.auth.uid == userId;
      
      match /friends/{friendId} {
        // A user can only read their own friends list
        allow read: if request.auth.uid == userId;
        
        // Allow creating/deleting a friend document if:
        // 1. You are the user managing your own friend list (removing a friend)
        // 2. You are accepting a friend request from the other user.
        allow write: if (request.auth.uid == userId) || 
                       (request.auth.uid == friendId && friendRequestExists(userId, friendId));
      }
    }

    match /friendRequests/{requestId} {
      // Users can read requests sent to them
      allow read: if request.auth.uid == resource.data.to;
      
      // Users can create a request if they are the sender
      allow create: if request.auth.uid == request.resource.data.from;
      
      // Users can delete a request if they are the recipient (accept/reject) or the sender (cancel)
      allow delete: if request.auth.uid == resource.data.to || request.auth.uid == resource.data.from;
    }
    
    match /rooms/{roomId} {
      allow read, write: if request.auth.uid != null;
      
      match /messages/{messageId} {
        allow read, write: if request.auth.uid != null;
      }
    }
  }
}
