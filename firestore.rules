
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Users can read anyone's profile, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
      
      // Rules for the 'friends' subcollection
      match /friends/{friendId} {
        // A user can read their own friends list
        allow read: if request.auth.uid == userId;

        // A user can remove a friend from their own list
        allow delete: if request.auth.uid == userId;
        
        // Allow creating a friendship entry under two conditions:
        // 1. The user is adding a friend to their OWN friends list.
        // 2. The user is being added to another user's list AS PART OF accepting a friend request.
        allow create: if (request.auth.uid == userId) || 
                       (get(/databases/$(database)/documents/friendRequests/$(friendId)_$(userId)).data.to == userId);
      }
    }
    
    // Rules for friend requests
    match /friendRequests/{requestId} {
      // Allow read if the user is either the sender or the receiver
      allow read: if request.auth != null && (resource.data.from == request.auth.uid || resource.data.to == request.auth.uid);
      
      // Allow creating a request if the 'from' field is the user's own UID
      allow create: if request.auth.uid == request.resource.data.from;
      
      // Allow deleting a request if the user is either the sender (canceling) or receiver (rejecting)
      allow delete: if request.auth.uid == resource.data.from || request.auth.uid == resource.data.to;
    }
    
    // Rules for chat rooms
    match /rooms/{roomId} {
      // Allow read/write access to a room if the user is a participant.
      allow read, write: if request.auth != null && resource.data.participants.hasAny([request.auth.uid]);
      
      // Rules for messages within a room
      match /messages/{messageId} {
        // Allow read if the user is a participant of the parent room.
        allow read: if request.auth != null && get(/databases/$(database)/documents/rooms/$(roomId)).data.participants.hasAny([request.auth.uid]);
        // Allow creating a message if the user is a participant and the message is from them.
        allow create: if request.auth != null && get(/databases/$(database)/documents/rooms/$(roomId)).data.participants.hasAny([request.auth.uid]) && request.resource.data.userId == request.auth.uid;
        // Generally, message editing/deletion can be restricted.
        allow update, delete: if false; 
      }
    }
  }
}
