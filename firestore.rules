
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Anyone can read a user's public profile
      allow get: if request.auth != null;

      // A user's friends subcollection can only be read by the user
      match /friends/{friendId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Rules for chat rooms
    match /rooms/{roomId} {
      // Allow read/write access to room document for participants
      allow read, write: if request.auth != null && resource.data.participants[request.auth.uid] == true;

      // Rules for messages within a room
      match /messages/{messageId} {
        // Participants can read all messages
        allow read: if request.auth != null && get(/databases/$(database)/documents/rooms/$(roomId)).data.participants[request.auth.uid] == true;
        
        // Only authenticated users who are participants can create messages
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId &&
                         get(/databases/$(database)/documents/rooms/$(roomId)).data.participants[request.auth.uid] == true;
      }
    }

    // Public read for all users
     match /users/{userId} {
       allow get: if request.auth != null;
     }

     // Deny all other friend-related writes to prevent bypasses
    match /users/{userId}/friends/{friendId} {
        allow write: if false; 
    }
  }
}
